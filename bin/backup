#!/usr/bin/env python
import argparse
import datetime as dt
import os.path as op
import subprocess
import sys

RSYNC = 'sudo rsync -aAXHvhy --stats --delete'
FILTERS = [
    '+ /boot/',
    '+ /etc/',
    '+ /root/',
    '+ /home/',
    '+ /home/naspeh/',
    '+ /home/naspeh/v/',
    '- /home/naspeh/v/*',
    '- /home/**/.thumbnails/',
    '- /home/*',
    '+ /arch/',
    '+ /arch/naspeh/',
    '+ /arch/nayavu/',
    '+ /arch/photo/',
    '- /arch/*',
    '- /**/.cache/',
    '- /**/__pycache__/',
    '- /**/*.pyc',
    '- /*'
]
BDIR = '/arch/backup/'


def sh(cmd, **kw):
    print(cmd)
    subprocess.call(cmd, shell=True, **kw)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--fake', action='store_true', help='dry run')
    parser.add_argument('-d', '--dest', default=BDIR, help='backup directory')
    subs = parser.add_subparsers()

    def sub(name, **kw):
        s = subs.add_parser(name, **kw)
        s.set_defaults(sub=name)
        s.arg = lambda *a, **kw: s.add_argument(*a, **kw) and s
        return s

    sub('tar', help='archive delta directory')\
        .arg('-l', '--label', help='label for archive')\
        .arg('-d', '--delete', help='delete delta directory')

    sub('copy', help='copy backup directory')\
        .arg('src', default=BDIR, nargs='?', help='source path')\
        .arg('dest', help='destination path')\
        .arg('-e', '--extra', default='', help='extra options for rsync')

    sub('full', help='archive whole disk')

    args = parser.parse_args(sys.argv[1:])
    rsync = RSYNC + ' --dry-run' if args.fake else RSYNC
    today = dt.date.today().isoformat()
    if not hasattr(args, 'sub'):
        var = op.abspath(op.realpath(op.dirname(__file__)) + '/../var')
        sh(
            'pkglist -n > {0}/pkglist.txt'
            ' && pkglist -m > {0}/pkgaur.txt'
            .format(var)
        )

        rsync += ' --delete-excluded ' + (
            ' '.join(['--filter="%s"' % v for v in FILTERS])
        )
        sh(
            rsync +
            ' --backup --backup-dir={dest}delta/'
            ' / {dest}latest/'
            .format(dest=args.dest)
        )
    elif args.sub == 'tar':
        name = today
        if args.label:
            name += '-' + args.label
        sh(
            'cd {dest} && tar -czf {name}.tar.gz --directory=delta .'
            .format(dest=args.dest, name=name)
        )
        if args.delete:
            sh('rm -r {}delta'.format(args.dest))
    elif args.sub == 'copy':
        sh(
            rsync + ' -x --delete {extra} {src} {dest}/'
            .format(src=args.src, dest=args.dest.rstrip('/'), extra=args.extra)
        )
    elif args.sub == 'full':
        rsync += ' -x --exclude=' + (
            '{/dev/*,/proc/*,/sys/*,/tmp/*,/run/*,/mnt/*,/media/*,/lost+found}'
        )
        try:
            sh(
                'lvcreate --size 10G --snapshot --name snap /dev/pad/root'
                ' && mount /dev/pad/snap {dest}mnt'
                ' && {rsync} {dest}mnt/ {dest}full/'
                .format(dest=args.dest, rsync=rsync)
            )
        finally:
            sh(
                'umount {dest}mnt; lvremove -f /dev/pad/snap'
                .format(dest=args.dest)
            )


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit('Closed.')
