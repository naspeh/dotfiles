#!/usr/bin/env python
import argparse
import datetime as dt
import os
import subprocess
import sys

RSYNC = 'sudo rsync -aAXHvh --stats'
FILTERS = [
    '+ /boot/',
    '+ /etc/',
    '+ /root/',
    '+ /var/',
    '+ /var/lib/',
    '+ /var/lib/pacman/',
    '+ /var/lib/pacman/local/',
    '- /var/lib/pacman/*',
    '- /var/lib/*',
    '- /var/*',
    '+ /home/',
    '+ /home/naspeh/',
    '+ /home/naspeh/v/',
    '- /home/naspeh/v/*',
    '- /home/**/.thumbnails/',
    '- /home/**/Cache*/',
    '- /home/**/*Cache/',
    '- /home/*',
    '+ /arch/',
    '+ /arch/naspeh/',
    '+ /arch/nayavu/',
    '- /arch/*',
    '- /**/.cache/',
    '- /**/__pycache__/',
    '- /**/*.pyc',
    '- /*'
]


def sh(cmd, **kw):
    print(cmd)
    subprocess.call(cmd, shell=True, **kw)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--fake', action='store_true', help='dry run')
    parser.add_argument(
        '-d', '--dest', default='/arch/backup/',
        help='backup directory'
    )
    subs = parser.add_subparsers()

    def sub(name, **kw):
        s = subs.add_parser(name, **kw)
        s.set_defaults(sub=name)
        s.arg = lambda *a, **kw: s.add_argument(*a, **kw) and s
        return s

    sub('tar', help='archive delta directory')\
        .arg('-l', '--label', help='label for archive')

    sub('copy', help='copy backup directory')\
        .arg('path', help='destination path')

    sub('dd', help='archive whole disk')

    sub('pkgs', help='update package list files')

    args = parser.parse_args(sys.argv[1:])
    rsync = RSYNC + ' --dry-run' if args.fake else RSYNC
    today = dt.date.today().isoformat()
    if not hasattr(args, 'sub'):
        filters = ' '.join(['--filter="%s"' % v for v in FILTERS])
        sh(
            rsync +
            ' --delete --delete-excluded'
            ' --backup --backup-dir={dest}delta/'
            ' {filters}'
            ' / {dest}latest/'
            .format(dest=args.dest, filters=filters)
        )
    elif args.sub == 'tar':
        name = today
        if args.label:
            name += '-' + args.label
        sh(
            'cd {dest} && tar -czf {name}.tar.gz --directory=delta .'
            .format(dest=args.dest, name=name)
        )
    elif args.sub == 'copy':
        sh(
            rsync + ' --delete {src} {dest}/'
            .format(src=args.dest, dest=args.path.rstrip('/'))
        )
    elif args.sub == 'dd':
        sh(
            'lvcreate --size 10G --snapshot --name snap /dev/pad/root'
            ' && dd if=/dev/pad/snap | gzip -c > {dest}dd-{today}-root.img.gz'
            ' && lvremove -f /dev/pad/snap'
            .format(dest=args.dest, today=today)
        )
    elif args.sub == 'pkgs':
        var = os.path.realpath(os.path.dirname(__file__)) + '/../var/'
        sh(
            'pkglist -n > {0}pkglist.txt'
            ' && pkglist -m > {0}pkgaur.txt'
            .format(var)
        )


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit('Closed.')
