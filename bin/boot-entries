#!/usr/bin/env python
import contextlib
import os
import re
import sys
import subprocess as sp

_conf = None


if os.geteuid() != 0:
    sp.call(['sudo'] + sys.argv)
    exit()


@contextlib.contextmanager
def entry(label):
    global _conf
    if not _conf:
        with open('/boot/loader/entries/arch.conf', 'br') as f:
            _conf = f.read().decode()
    with open('/boot/loader/entries/arch-%s.conf' % label, 'bw') as f:
        yield _conf, lambda c: f.write(c.encode())

# with entry('bak') as (cnf, save):
#     name = sp.check_output('expac -Q "%n %v" linux', shell=True)
#     name = name.decode().strip()
#     cnf = cnf.replace('/vmlinuz-linux', '/vmlinuz-linux-bak')
#     cnf = cnf.replace('/initramfs-linux.img', '/initramfs-linux-bak.img')
#     cnf = '# {}\n{}'.format(name, cnf)
#     save(cnf)

#     sp.call(
#         'cp /boot/vmlinuz-linux /boot/vmlinuz-linux-bak'
#         '&& cp /boot/initramfs-linux.img /boot/initramfs-linux-bak.img',
#         shell=True
#     )

with entry('lts') as (cnf, save):
    name = sp.check_output('expac -Q "%n %v" linux-lts', shell=True)
    name = name.decode().strip()
    cnf = cnf.replace('/vmlinuz-linux', '/vmlinuz-linux-lts')
    cnf = cnf.replace('/initramfs-linux.img', '/initramfs-linux-lts.img')
    cnf = '# {}\n{}'.format(name, cnf)
    save(cnf)

# with entry('hardened') as (cnf, save):
#     name = sp.check_output('expac -Q "%n %v" linux-hardened', shell=True)
#     name = name.decode().strip()
#     cnf = cnf.replace('/vmlinuz-linux', '/vmlinuz-linux-hardened')
#     cnf = cnf.replace('/initramfs-linux.img', '/initramfs-linux-hardened.img')
#     cnf = '# {}\n{}'.format(name, cnf)
#     save(cnf)

with entry('console') as (c, save):
    c = re.sub(r'(?m)^options.*$', r'\g<0> systemd.unit=multi-user.target', c)
    save(c)

with entry('test') as (c, save):
    c = c.replace('root=/dev/pad/root', 'root=/dev/pad/test')
    save(c)
