#!/usr/bin/env python
import argparse
import datetime as dt
import subprocess

RSYNC = 'rsync -aAXHvh --stats'


def sh(cmd, **kw):
    try:
        print(cmd)
        subprocess.call(cmd, shell=True, **kw)
    except KeyboardInterrupt:
        exit('Closed.')


def main(args):
    rsync = RSYNC + ' --dry-run' if args.fake else RSYNC

    if args.sub == 'tar':
        name = dt.date.today().isoformat()
        if args.label:
            name += '-' + args.label
        sh(
            'cd {dest} && tar -czf {name}.tar.gz --directory=delta .'
            .format(dest=args.dest, name=name)
        )
        return
    elif args.sub == 'copy':
        sh(
            rsync + ' --delete {src} {dest}/'
            .format(src=args.dest, dest=args.path.rstrip('/'))
        )
        return

    filters = ' '.join(['--filter="%s"' % v for v in [
        '+ /etc/',
        '+ /root/',
        '+ /var/',
        '+ /var/lib/',
        '+ /var/lib/pacman/',
        '+ /var/lib/pacman/local/',
        '- /var/lib/pacman/*',
        '- /var/lib/*',
        '- /var/*',
        '+ /home/',
        '+ /home/naspeh/',
        '- /home/naspeh/v/',
        '- /home/**/*Cache*/',
        '- /home/**/*cache*/',
        '- /home/**/.thumbnails/',
        '- /home/*',
        '+ /arch/',
        '+ /arch/naspeh/',
        '+ /arch/nayavu/',
        '- /arch/*',
        '- /**/__pycache__/',
        '- /**/*.pyc',
        '- /*'
    ]])

    sh(
        rsync +
        ' --delete --delete-excluded'
        ' --backup --backup-dir={dest}delta/'
        ' {filters}'
        ' / {dest}latest/'
        .format(dest=args.dest, filters=filters)
    )


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-f', '--fake', action='store_true', help='dry run')
    parser.add_argument(
        '-d', '--dest', default='/arch/backup/pad/',
        help='backup directory'
    )
    subs = parser.add_subparsers(dest='sub')

    sub_tar = subs.add_parser('tar', help='archive delta directory')
    sub_tar.add_argument('-l', '--label', help='label for archive')

    sub_copy = subs.add_parser('copy', help='copy backup directory')
    sub_copy.add_argument('path', help='destination path')

    args = parser.parse_args()
    main(args)
